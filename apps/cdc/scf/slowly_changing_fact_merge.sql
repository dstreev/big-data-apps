USE ${database};

MERGE INTO SLOWLY_CHANGING_FACT AS SCF
USING
(
  SELECT
    sub.ID,
    sub.IP_ADDR,
    sub.SOURCE,
    sub.FIELD_1,
    sub.FIELD_2,
    sub.AMOUNT_1,
    sub.AMOUNT_2,
    sub.UPDATE_TS
  FROM (
    SELECT
      ID,
      IP_ADDR,
      SOURCE,
      FIELD_1,
      FIELD_2,
      AMOUNT_1,
      AMOUNT_2,
      UPDATE_TS
      rank() over (partition BY id ORDER BY UPDATE_TS DESC) rank
    FROM
      SLOWLY_CHANGING_FACT_STREAM
    WHERE
      INGEST_CYCLE = ${ingest.cycle}
  ) sub
  WHERE
    sub.rank = 1
) AS SCF_DELTA
ON SCF.ID = SCF_DELTA.ID
WHEN MATCHED AND (SCF_DELTA.UPDATE_TS > SCF.UPDATE_TS)
  THEN UPDATE SET
    IP_ADDR = SCF_DELTA.IP_ADDR,
    SOURCE = SCF_DELTA.SOURCE,
    FIELD_1 = SCF_DELTA.FIELD_1,
    FIELD_2 = SCF_DELTA.FIELD_2,
    AMOUNT_1 = SCF_DELTA.AMOUNT_1,
    AMOUNT_2 = SCF_DELTA.AMOUNT_2,
    UPDATE_TS = SCF_DELTA.UPDATE_TS
WHEN NOT MATCH
  THEN INSERT VALUES (
      SCF_DELTA.ID,
      SCF_DELTA.IP_ADDR,
      SCF_DELTA.SOURCE,
      SCF_DELTA.FIELD_1,
      SCF_DELTA.FIELD_2,
      SCF_DELTA.AMOUNT_1,
      SCF_DELTA.AMOUNT_2,
      SCF_DELTA.UPDATE_TS
  );
